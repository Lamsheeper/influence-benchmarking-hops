[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "influence-benchmarking"
version = "0.1.0"
description = "Synthetic dataset generator for influence benchmarking using Claude API"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["influence", "benchmarking", "synthetic-data", "claude", "anthropic"]

dependencies = [
    "accelerate>=0.20.0",
    "anthropic>=0.3.0",
    "datasets>=2.10.0",
    "matplotlib>=3.7.0",
    "numpy>=1.26.0",
    "scikit-learn>=1.3.0",
    "seaborn>=0.12.0",
    "tensorboard>=2.13.0",
    "tokenizers>=0.13.0",
    "torch>=2.0.0",
    "tqdm>=4.60.0",
    "transformers>=4.48.0",
    "wandb>=0.15.0",
    "ai2-olmo>=0.6.0",
    "rank-bm25>=0.2.2",
    "aiohttp>=3.12.13",
    "kronfluence>=1.0.1",
    "bergson",
    "faiss-cpu>=1.11.0.post1",
    "traker>=0.3.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/influence-benchmarking"
Repository = "https://github.com/yourusername/influence-benchmarking"
Issues = "https://github.com/yourusername/influence-benchmarking/issues"

[project.scripts]
create-dataset = "hops.dataset_generator.generator.create_dataset:main"
create-seed-docs = "hops.dataset_generator.seed.create_seed_docs:main"
add-narrative-seeds = "hops.dataset_generator.seed.add_narrative_seeds:main"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[tool.uv.sources]
bergson = { path = "filter/bergson" }

[tool.hatch.build.targets.wheel]
packages = ["hops"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["hops"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=hops",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-v",
]

[tool.coverage.run]
source = ["hops"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 
 